events {
    worker_connections 1024;
}
http {
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=flask_cache:10m max_size=100m inactive=60m use_temp_path=off;

    server {
        listen 8080;
        proxy_cache flask_cache;

        location ~* \.(ico|png|css|jpg|js|gif|jpeg)$ {
            #proxy_set_header Cookie "";
            proxy_ignore_headers Set-Cookie;
            proxy_hide_header Set-Cookie;
            proxy_ignore_headers Cache-Control;
            proxy_pass http://web:5000;
            proxy_cache_key $scheme$uri;
            proxy_cache_valid 200 30s;  # Cache les réponses 200 
            proxy_cache_valid 404 30s;  # Cache les réponses 404 
            proxy_cache_use_stale error timeout updating;  # Utiliser les réponses en cache même en cas d'erreur (par exemple, si Flask est temporairement hors ligne)
            add_header X-Cache $upstream_cache_status;
            add_header Cache-Control "public, max-age=30s";
            # En fait, pour TOUT contenu statique, j'ignore et je dissimule les cookies (pas de fuite de cookiedans les réponses), la clef de mise en cache 
            # dépend principalement de l'uri demandée,j'ajoute des Headers pour indiquer les paramètres des cookies.
        }
        location / {
            proxy_pass http://web:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
